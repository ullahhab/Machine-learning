def CNN(x_train,y_train,x_test,y_test):
    model = Sequential()
    model.add(Conv2D(32, (3,3), activation='relu', input_shape=(448,448,1)))
    model.add(MaxPooling2D(2,2))
    model.add(Conv2D(64,(3,3), activation='relu'))
    model.add(MaxPooling2D(2,2))
    model.add(Conv2D(128, (3,3), activation='relu'))
    model.add(Conv2D(64, (1,1), activaiton= 'relu'))
    model.add(Conv2D(128, (3,3), activation= 'relu'))
    model.add(MaxPooling2D(2,2))
    model.add(Conv2D(256, (3,3), activation='relu'))
    model.add(Conv2D(128, (1,1), activation='relu'))
    model.add(Conv2D(256, (3,3), activation='relu'))
    model.add(MaxPooling2D(2,2))
    model.add(Conv2D(512, (3,3), activation='relu'))
    model.add(Conv2D(256, (1,1), activation='relu'))
    model.add(Conv2D(512, (3,3), activation='relu'))
    model.add(Conv2D(256, (1,1), activation='relu'))
    model.add(Conv2D(512, (3,3), activation='relu'))
    model.add(MaxPooling2D(2,2))
    model.add(Conv2D(1024, (3,3), activation='relu'))
    model.add(Conv2D(512, (1,1), activation='relu'))
    model.add(Conv2D(1024, (3,3), activation='relu'))
    model.add(Conv2D(512, (1,1), activation='relu'))
    model.add(Conv2D(1024, (3,3), activation='relu'))
    model.add(Flatten())
    model.add(Dense(100,activation='relu'))
    model.add(Dense(10, activation='softmax'))

    model.compile(loss='sparse_categorical_crossentropy', metrics=['accuracy'])
    model.fit(x_train,y_train, epochs=10, batch_size=32,verbose=0)
